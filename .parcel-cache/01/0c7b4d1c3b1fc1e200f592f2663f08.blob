var helpers = require("../../../../../../.nvm/versions/node/v14.16.1/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "ProfileView", function () {
    return ProfileView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _reactBootstrap = require('react-bootstrap');
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactBootstrapContainer = require("react-bootstrap/Container");
  var _reactBootstrapContainerDefault = _parcelHelpers.interopDefault(_reactBootstrapContainer);
  var _reactRouterDom = require("react-router-dom");
  var _reactRedux = require('react-redux');
  var _actionsActions = require('../../actions/actions');
  require('./profile-view.scss');
  var _jsxFileName = "/Users/yaya/Desktop/CF/myFlix-client/src/components/profile-view/profile-view.jsx";
  class ProfileView extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
      this.state = {
        Username: "",
        Password: "",
        Email: "",
        Birthdate: "",
        FavoriteMovies: [],
        UsernameError: "",
        EmailError: "",
        PasswordError: "",
        BirthdateError: ""
      };
    }
    componentDidMount() {
      let accessToken = localStorage.getItem("token");
      this.getUsers(accessToken);
    }
    getUsers(token) {
      _axiosDefault.default.get('https://movieapi-yayacdm.herokuapp.com/users', {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // Assign the result to the state
        this.setState({
          users: response.data
        });
        console.log(response);
      }).catch(function (error) {
        console.log(error);
      });
    }
    removeFavorite(movie) {
      const token = localStorage.getItem("token");
      const url = "https://movieapi-yayacdm.herokuapp.com/users" + localStorage.getItem("user") + "/movies/" + movie._id;
      _axiosDefault.default.delete(url, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        console.log(response);
        this.componentDidMount();
        // location.reload();
        alert(movie.Title + " has been removed from your Favorites.");
      });
    }
    handleDelete() {
      const token = localStorage.getItem("token");
      const user = localStorage.getItem("user");
      _axiosDefault.default.delete(`https://movieapi-yayacdm.herokuapp.com/users/${user}`, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(() => {
        alert(user + " has been deleted.");
        localStorage.removeItem("user");
        localStorage.removeItem("token");
        window.location.pathname = "/";
      }).catch(function (error) {
        console.log(error);
      });
    }
    handleUpdate(e) {
      let token = localStorage.getItem("token");
      // console.log({ token });
      let user = localStorage.getItem("user");
      console.log(this.state);
      let setisValid = this.formValidation();
      if (setisValid) {
        _axiosDefault.default.put(`https://movieapi-yayacdm.herokuapp.com/users/${user}`, {
          Username: this.state.Username,
          Password: this.state.Password,
          Email: this.state.Email,
          Birthdate: this.state.Birthdate
        }, {
          headers: {
            Authorization: `Bearer ${token}`
          }
        }).then(response => {
          const data = response.data;
          localStorage.setItem("user", data.Username);
          console.log(data);
          alert(user + " has been updated.");
          console.log(response);
        }).catch(function (error) {
          console.log(error.response.data);
        });
      }
    }
    formValidation() {
      let UsernameError = {};
      let EmailError = {};
      let PasswordError = {};
      let BirthdateError = {};
      let isValid = true;
      if (this.state.Username.trim().length < 5) {
        UsernameError.usernameShort = "Must be alphanumeric and contains at least 5 characters";
        isValid = false;
      }
      if (this.state.Password.trim().length < 3) {
        PasswordError.passwordMissing = "You must enter a current or new password.(minimum 4 characters) ";
        isValid = false;
      }
      if (!(this.state.Email && this.state.Email.includes(".") && this.state.Email.includes("@"))) {
        EmailError.emailNotEmail = "A valid email address is required.";
        isValid = false;
      }
      if (this.state.birthdate === '') {
        BirthdateError.birthdateEmpty = "Please enter your birthdate.";
        isValid = false;
      }
      this.setState({
        UsernameError: UsernameError,
        PasswordError: PasswordError,
        EmailError: EmailError,
        BirthdateError: BirthdateError
      });
      return isValid;
    }
    handleChange(e) {
      let {name, value} = e.target;
      // console.log(name, value);
      this.setState({
        [name]: value
      });
    }
    render() {
      const {user, movies} = this.props;
      const {UsernameError, EmailError, PasswordError, BirthdateError} = this.state;
      const FavoriteMovieList = movies.filter(movie => {
        return this.state.FavoriteMovies.includes(movie._id);
      });
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "userProfile",
          style: {
            display: "flex"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 161,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapContainerDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 162,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Row, {
          className: "justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 163,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
          md: 12,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 164,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Jumbotron, {
          className: "profile-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 165,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form, {
          className: "justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 166,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Text, {
          className: "mt-200",
          as: "h1",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 167,
            columnNumber: 19
          }
        }, "Favorites:"), /*#__PURE__*/_reactDefault.default.createElement("h1", {
          style: {
            textAlign: "center"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 168,
            columnNumber: 19
          }
        }, "Update Profile Details"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Group, {
          controlId: "formUsername",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 170,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 171,
            columnNumber: 21
          }
        }, "Username: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          size: "sm",
          type: "text",
          name: "Username",
          value: this.state.Username,
          onChange: e => this.handleChange(e),
          placeholder: "Change username",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 172,
            columnNumber: 21
          }
        }), Object.keys(UsernameError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 180,
                columnNumber: 25
              }
            }, UsernameError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Group, {
          controlId: "formPassword",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 187,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 188,
            columnNumber: 21
          }
        }, "Password: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          size: "sm",
          type: "password",
          name: "Password",
          value: this.state.Password,
          onChange: e => this.handleChange(e),
          placeholder: "Enter current password or Change password",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 189,
            columnNumber: 21
          }
        }), Object.keys(PasswordError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 197,
                columnNumber: 25
              }
            }, PasswordError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Group, {
          controlId: "formEmail",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 204,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 205,
            columnNumber: 21
          }
        }, "Email: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          size: "sm",
          type: "email",
          name: "Email",
          value: this.state.Email,
          onChange: e => this.handleChange(e),
          placeholder: "Change Email",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 206,
            columnNumber: 21
          }
        }), Object.keys(EmailError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 215,
                columnNumber: 25
              }
            }, EmailError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Group, {
          controlId: "formBirthdate",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 222,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 223,
            columnNumber: 21
          }
        }, "Date of Birth: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          size: "sm",
          type: "date",
          name: "Birthdate",
          value: this.state.Birthdate,
          onChange: e => this.handleChange(e),
          placeholder: "Change Birthdate",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 224,
            columnNumber: 21
          }
        }), Object.keys(BirthdateError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 233,
                columnNumber: 25
              }
            }, BirthdateError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/users/${this.state.Username}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 241,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          className: "mb-2",
          variant: "success",
          type: "link",
          size: "md",
          block: true,
          onClick: e => this.handleUpdate(e),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 242,
            columnNumber: 21
          }
        }, "Save changes")), /*#__PURE__*/_reactDefault.default.createElement("br", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 251,
            columnNumber: 19
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          className: "mb-2",
          variant: "danger",
          size: "md",
          block: true,
          onClick: () => this.handleDelete(),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 253,
            columnNumber: 19
          }
        }, "Delete Account"))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Jumbotron, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 263,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "favoriteMovies",
          style: {
            float: "center",
            textAlign: "center"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 264,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Text, {
          className: "mt-200",
          as: "h3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 265,
            columnNumber: 19
          }
        }, "Favorites:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Row, {
          className: "mb-20",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 266,
            columnNumber: 19
          }
        }, FavoriteMovieList.map(movie => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
              md: 3,
              key: movie._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 269,
                columnNumber: 25
              }
            }, /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: movie._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 270,
                columnNumber: 27
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card, {
              className: "mb-20",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 271,
                columnNumber: 29
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Img, {
              variant: "top",
              src: movie.ImagePath,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 272,
                columnNumber: 31
              }
            }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Body, {
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 273,
                columnNumber: 31
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
              to: `/movies/${movie._id}`,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 274,
                columnNumber: 33
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Title, {
              as: "h6",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 275,
                columnNumber: 35
              }
            }, movie.Title)), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
              className: "mb-30",
              onClick: () => this.removeFavorite(movie),
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 277,
                columnNumber: 33
              }
            }, "Remove")))))
          );
        }))))))))
      );
    }
  }
  ProfileView.propTypes = {
    movies: _propTypesDefault.default.array.isRequired
  };
  let mapStateToProps = state => {
    return {
      user: state.user,
      movies: state.movies
    };
  };
  exports.default = _reactRedux.connect(mapStateToProps, {
    setUser: _actionsActions.setUser,
    updateUser: _actionsActions.updateUser
  })(ProfileView);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
